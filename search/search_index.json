{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Calculation Docs","text":"<p>This site contains the project documentation for the <code>calculator</code> project that is a toy module used in the Real Python tutorial Build Your Python Project Documentation With MkDocs. Its aim is to give you a framework to build your project documentation using Python, MkDocs, mkdocstrings, and the Material for MkDocs theme.</p>"},{"location":"#table-of-contents","title":"Table Of Contents","text":"<p>The documentation follows the best practice for project documentation as described by Daniele Procida in the Di\u00e1taxis documentation framework and consists of four separate parts:</p> <ol> <li>Tutorials</li> <li>How-To Guides</li> <li>Reference</li> <li>Explanation</li> </ol> <p>Quickly find what you're looking for depending on your use case by looking at the different pages.</p>"},{"location":"#project-overview","title":"Project Overview","text":"<p>Do math with your own functions.</p> <p>Modules exported by this package:</p> <ul> <li><code>calculations</code>: Provide several sample math calculations.</li> </ul>"},{"location":"#acknowledgements","title":"Acknowledgements","text":"<p>I want to thank my house plants for providing me with a negligible amount of oxygen each day. Also, I want to thank the sun for providing more than half of their nourishment free of charge.</p>"},{"location":"explanation/","title":"Explanation","text":"<p>This part of the project documentation focuses on an understanding-oriented approach. You'll get a chance to read about the background of the project, as well as reasoning about how it was implemented.</p> <p>Note: Expand this section by considering the following points:</p> <ul> <li>Give context and background on your library</li> <li>Explain why you created it</li> <li>Provide multiple examples and approaches of how     to work with it</li> <li>Help the reader make connections</li> <li>Avoid writing instructions or technical descriptions     here</li> </ul>"},{"location":"how-to-guides/","title":"How-To Guides","text":"<p>This part of the project documentation focuses on a problem-oriented approach. You'll tackle common tasks that you might have, with the help of the code provided in this project.</p>"},{"location":"how-to-guides/#how-to-add-two-numbers","title":"How To Add Two Numbers?","text":"<p>You have two numbers and you need to add them together. You're in luck! The <code>calculator</code> package can help you get this done.</p> <p>Download the code from this GitHub repository and place the <code>calculator/</code> folder in the same directory as your Python script:</p> <pre><code>your_project/\n\u2502\n\u251c\u2500\u2500 calculator/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 calculations.py\n\u2502\n\u2514\u2500\u2500 your_script.py\n</code></pre> <p>Inside of <code>your_script.py</code> you can now import the <code>add()</code> function from the <code>calculator.calculations</code> module:</p> <pre><code># your_script.py\nfrom calculator.calculations import add\n</code></pre> <p>After you've imported the function, you can use it to add any two numbers that you need to add:</p> <pre><code># your_script.py\nfrom calculator.calculations import add\n\nprint(add(20, 22))  # OUTPUT: 42.0\n</code></pre> <p>You're now able to add any two numbers, and you'll always get a <code>float</code> as a result.</p>"},{"location":"reference/","title":"Reference","text":"<p>This part of the project documentation focuses on an information-oriented approach. Use it as a reference for the technical implementation of the <code>calculator</code> project code.</p> <p>Provide several sample math calculations.</p> <p>This module allows the user to make mathematical calculations.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; from calculator import calculations\n&gt;&gt;&gt; calculations.add(2, 4)\n6.0\n&gt;&gt;&gt; calculations.multiply(2.0, 4.0)\n8.0\n&gt;&gt;&gt; from calculator.calculations import divide\n&gt;&gt;&gt; divide(4.0, 2)\n2.0\n</code></pre> <p>The module contains the following functions:</p> <ul> <li><code>add(a, b)</code> - Returns the sum of two numbers.</li> <li><code>subtract(a, b)</code> - Returns the difference of two numbers.</li> <li><code>multiply(a, b)</code> - Returns the product of two numbers.</li> <li><code>divide(a, b)</code> - Returns the quotient of two numbers.</li> </ul>"},{"location":"reference/#calculator.calculations.add","title":"<code>add(a, b)</code>","text":"<p>Compute and return the sum of two numbers.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; add(4.0, 2.0)\n6.0\n&gt;&gt;&gt; add(4, 2)\n6.0\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>a</code> <p>A number representing the first addend in the addition.</p> required <code>b</code> <p>A number representing the second addend in the addition.</p> required <p>Returns:</p> Type Description <code>float</code> <p>A number representing the arithmetic sum of <code>a</code> and <code>b</code>.</p> Source code in <code>calculator/calculations.py</code> <pre><code>def add(a: Union[float, int], b: Union[float, int]) -&gt; float:\n\"\"\"Compute and return the sum of two numbers.\n\n    Examples:\n        &gt;&gt;&gt; add(4.0, 2.0)\n        6.0\n        &gt;&gt;&gt; add(4, 2)\n        6.0\n\n\n    Args:\n        a : A number representing the first addend in the addition.\n        b : A number representing the second addend in the addition.\n\n    Returns:\n        A number representing the arithmetic sum of `a` and `b`.\n    \"\"\"\n    return float(a + b)\n</code></pre>"},{"location":"reference/#calculator.calculations.divide","title":"<code>divide(a, b)</code>","text":"<p>Compute and return the quotient of two numbers.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; divide(4.0, 2.0)\n2.0\n&gt;&gt;&gt; divide(4, 2)\n2.0\n&gt;&gt;&gt; divide(4, 0)\nTraceback (most recent call last):\n...\nZeroDivisionError: division by zero\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>a</code> <p>A number representing the dividend in the division.</p> required <code>b</code> <p>A number representing the divisor in the division.</p> required <p>Returns:</p> Type Description <code>float</code> <p>A number representing the quotient of <code>a</code> and <code>b</code>.</p> <p>Raises:</p> Type Description <code>ZeroDivisionError</code> <p>An error occurs when the divisor is <code>0</code>.</p> Source code in <code>calculator/calculations.py</code> <pre><code>def divide(a: Union[float, int], b: Union[float, int]) -&gt; float:\n\"\"\"Compute and return the quotient of two numbers.\n\n    Examples:\n        &gt;&gt;&gt; divide(4.0, 2.0)\n        2.0\n        &gt;&gt;&gt; divide(4, 2)\n        2.0\n        &gt;&gt;&gt; divide(4, 0)\n        Traceback (most recent call last):\n        ...\n        ZeroDivisionError: division by zero\n\n    Args:\n        a : A number representing the dividend in the division.\n        b : A number representing the divisor in the division.\n\n    Returns:\n        A number representing the quotient of `a` and `b`.\n\n    Raises:\n        ZeroDivisionError: An error occurs when the divisor is `0`.\n    \"\"\"\n    if b == 0:\n        raise ZeroDivisionError(\"division by zero\")\n    return float(a / b)\n</code></pre>"},{"location":"reference/#calculator.calculations.multiply","title":"<code>multiply(a, b)</code>","text":"<p>Compute and return the product of two numbers.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; multiply(4.0, 2.0)\n8.0\n&gt;&gt;&gt; multiply(4, 2)\n8.0\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>a</code> <p>A number representing the multiplicand in the multiplication.</p> required <code>b</code> <p>A number representing the multiplier in the multiplication.</p> required <p>Returns:</p> Type Description <code>float</code> <p>A number representing the product of <code>a</code> and <code>b</code>.</p> Source code in <code>calculator/calculations.py</code> <pre><code>def multiply(a: Union[float, int], b: Union[float, int]) -&gt; float:\n\"\"\"Compute and return the product of two numbers.\n\n    Examples:\n        &gt;&gt;&gt; multiply(4.0, 2.0)\n        8.0\n        &gt;&gt;&gt; multiply(4, 2)\n        8.0\n\n    Args:\n        a : A number representing the multiplicand in the multiplication.\n        b : A number representing the multiplier in the multiplication.\n\n    Returns:\n        A number representing the product of `a` and `b`.\n    \"\"\"\n    return float(a * b)\n</code></pre>"},{"location":"reference/#calculator.calculations.subtract","title":"<code>subtract(a, b)</code>","text":"<p>Calculate the difference of two numbers.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; subtract(4.0, 2.0)\n2.0\n&gt;&gt;&gt; subtract(4, 2)\n2.0\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>a</code> <p>A number representing the minuend in the subtraction.</p> required <code>b</code> <p>A number representing the subtrahend in the subtraction.</p> required <p>Returns:</p> Type Description <code>float</code> <p>A number representing the difference between <code>a</code> and <code>b</code>.</p> Source code in <code>calculator/calculations.py</code> <pre><code>def subtract(a: Union[float, int], b: Union[float, int]) -&gt; float:\n\"\"\"Calculate the difference of two numbers.\n\n    Examples:\n        &gt;&gt;&gt; subtract(4.0, 2.0)\n        2.0\n        &gt;&gt;&gt; subtract(4, 2)\n        2.0\n\n    Args:\n        a : A number representing the minuend in the subtraction.\n        b : A number representing the subtrahend in the subtraction.\n\n    Returns:\n        A number representing the difference between `a` and `b`.\n    \"\"\"\n    return float(a - b)\n</code></pre>"},{"location":"tutorials/","title":"Tutorials","text":"<p>This part of the project documentation focuses on a learning-oriented approach. You'll learn how to get started with the code in this project.</p> <p>Note: Expand this section by considering the following points:</p> <ul> <li>Help newcomers with getting started</li> <li>Teach readers about your library by making them     write code</li> <li>Inspire confidence through examples that work for     everyone, repeatably</li> <li>Give readers an immediate sense of achievement</li> <li>Show concrete examples, no abstractions</li> <li>Provide the minimum necessary explanation</li> <li>Avoid any distractions</li> </ul>"}]}